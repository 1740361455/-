/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
    struct ListNode* l3=(struct ListNode* )malloc(sizeof(struct ListNode));
    l3->next=NULL;
    struct ListNode* l4=l3;
    int a=0;
    while(l1||l2)
    {
        if(l1&&l2)
        {
            l3->val=l1->val+l2->val+a;
            a=0;
            if(l3->val>9)
            {
                l3->val%=10;
                a=1;
            }
            l1=l1->next;
            l2=l2->next;
            if(l1||l2)
            {
                struct ListNode* p=(struct ListNode* )malloc(sizeof(struct ListNode));
                p->next=NULL;
                l3->next=p;
                l3=l3->next;
            }
              
        }
        else if(l1)
        {
            l3->val=l1->val+a;
            a=0;
            if(l3->val>9)
            {
                l3->val%=10;
                a=1;
            }
            l1=l1->next;
            if(l1)
            {
                struct ListNode* p=(struct ListNode* )malloc(sizeof(struct ListNode));
                p->next=NULL;
                l3->next=p;
                l3=l3->next;
            }
            
        }
        else
        {
            l3->val=l2->val+a;
            a=0;
            if(l3->val>9)
            {
                l3->val%=10;
                a=1;
            }
            l2=l2->next;
            if(l2)
            {
                struct ListNode* p=(struct ListNode* )malloc(sizeof(struct ListNode));
                p->next=NULL;
                l3->next=p;
                l3=l3->next;
            }
        }
    }
    if(a==1)
    {
        struct ListNode* p=(struct ListNode* )malloc(sizeof(struct ListNode));
        l3->next=p;
        l3=l3->next;
        l3->val=1;
        l3->next=NULL;
        return l4;
    }
    else
    return l4;
}
