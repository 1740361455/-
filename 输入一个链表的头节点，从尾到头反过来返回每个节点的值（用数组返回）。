int* reversePrint(struct ListNode* head, int* returnSize){
    if(head==NULL)
    {
        *returnSize=0;
        return head;
    }
    int* p=(int*)malloc(sizeof(int)*10001);
    struct ListNode* l=head;
    int sum=1;
    while(head->next)
    {
        sum++;
        head=head->next;
    }
    for(int i=sum-1;i>=0;i--)
    {
        p[i]=l->val;
        l=l->next;
    }
    *returnSize=sum;
    return p;
}















int a(struct ListNode* head,int* p)
 {
    if(head->next==NULL)
    {
        p[0]=head->val;
        return 0;
    }
    p[1+a(head->next,p)]=head->val;
    return 1+a(head->next,p);
 }
int* reversePrint(struct ListNode* head, int* returnSize){
    if(head==NULL)
    {
        *returnSize=0;
        return head;
    }
    int* p=(int*)malloc(sizeof(int)*10001);
    int x=a(head,p);
    *returnSize=x+1;
    return p;
}
